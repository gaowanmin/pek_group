package com.rtmap.airport.group.util;import com.baomidou.mybatisplus.core.mapper.BaseMapper;import com.baomidou.mybatisplus.generator.FastAutoGenerator;import java.util.ArrayList;import java.util.List;/** * 代码生成工具 * * @Auther: shan * @Date:2022/2/17 * @Description: */public class MpGenerator {    public static void main(String[] args) {        List<String> tables = new ArrayList<>();        tables.add("ts_weather");        FastAutoGenerator.create("jdbc:mysql://101.200.191.19:3306/pek_group", "root", "traffic")                .globalConfig(builder -> {                    builder.author("shan")               //作者                            .outputDir(System.getProperty("user.dir") + "/src/main/java")    //输出路径(写到java目录)                            .enableSwagger()           //开启swagger                            .commentDate("yyyy-MM-dd")                            .fileOverride();            //TODO 开启覆盖之前生成的文件                })                .packageConfig(builder -> {                    builder.parent("com.rtmap.airport.group")                            // .moduleName("")                            .entity("entity")                            .service("service")                            .serviceImpl("service.impl")                            .controller("controller")                            .mapper("mapper");                    // .xml("mapper")                    //.pathInfo(Collections.singletonMap(OutputFile.mapperXml, System.getProperty("user.dir") + "\\src\\main\\resources\\mapper"));                })                .strategyConfig(builder -> {                    builder.addInclude(tables)                            .addTablePrefix("ts_")//TODO 过滤表前缀                            .serviceBuilder()                            .formatServiceFileName("I%sService")                            .formatServiceImplFileName("%sServiceImpl")                            .entityBuilder()                            .enableLombok()                            .logicDeleteColumnName("deleted")                            .enableTableFieldAnnotation()                            .controllerBuilder()                            .formatFileName("%sController")                            .enableRestStyle()                            .mapperBuilder()                            .enableBaseResultMap()  //生成通用的resultMap                            .superClass(BaseMapper.class)                            .formatMapperFileName("%sMapper")                            .enableMapperAnnotation();                    //.formatXmlFileName("%sMapper");                })                //.templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板                .execute();    }}